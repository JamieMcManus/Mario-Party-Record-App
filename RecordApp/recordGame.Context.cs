//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecordApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class recordsDBEntities : DbContext
    {
        public recordsDBEntities()
            : base("name=recordsDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Game> Games { get; set; }
        public virtual DbSet<gameInstance> gameInstances { get; set; }
        public virtual DbSet<player> players { get; set; }
        public virtual DbSet<topPlayer> topPlayers { get; set; }
    
        public virtual int spAddPlayerRecord(Nullable<int> gameID, Nullable<int> playerID, Nullable<int> playerstars, Nullable<int> playercoins)
        {
            var gameIDParameter = gameID.HasValue ?
                new ObjectParameter("gameID", gameID) :
                new ObjectParameter("gameID", typeof(int));
    
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("playerID", playerID) :
                new ObjectParameter("playerID", typeof(int));
    
            var playerstarsParameter = playerstars.HasValue ?
                new ObjectParameter("playerstars", playerstars) :
                new ObjectParameter("playerstars", typeof(int));
    
            var playercoinsParameter = playercoins.HasValue ?
                new ObjectParameter("playercoins", playercoins) :
                new ObjectParameter("playercoins", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddPlayerRecord", gameIDParameter, playerIDParameter, playerstarsParameter, playercoinsParameter);
        }
    
        public virtual int spNewGame(Nullable<int> player1ID, Nullable<int> player1stars, Nullable<int> player1coins, Nullable<int> player2ID, Nullable<int> player2stars, Nullable<int> player2coins, Nullable<int> player3ID, Nullable<int> player3stars, Nullable<int> player3coins, Nullable<int> player4ID, Nullable<int> player4stars, Nullable<int> player4coins)
        {
            var player1IDParameter = player1ID.HasValue ?
                new ObjectParameter("player1ID", player1ID) :
                new ObjectParameter("player1ID", typeof(int));
    
            var player1starsParameter = player1stars.HasValue ?
                new ObjectParameter("player1stars", player1stars) :
                new ObjectParameter("player1stars", typeof(int));
    
            var player1coinsParameter = player1coins.HasValue ?
                new ObjectParameter("player1coins", player1coins) :
                new ObjectParameter("player1coins", typeof(int));
    
            var player2IDParameter = player2ID.HasValue ?
                new ObjectParameter("player2ID", player2ID) :
                new ObjectParameter("player2ID", typeof(int));
    
            var player2starsParameter = player2stars.HasValue ?
                new ObjectParameter("player2stars", player2stars) :
                new ObjectParameter("player2stars", typeof(int));
    
            var player2coinsParameter = player2coins.HasValue ?
                new ObjectParameter("player2coins", player2coins) :
                new ObjectParameter("player2coins", typeof(int));
    
            var player3IDParameter = player3ID.HasValue ?
                new ObjectParameter("player3ID", player3ID) :
                new ObjectParameter("player3ID", typeof(int));
    
            var player3starsParameter = player3stars.HasValue ?
                new ObjectParameter("player3stars", player3stars) :
                new ObjectParameter("player3stars", typeof(int));
    
            var player3coinsParameter = player3coins.HasValue ?
                new ObjectParameter("player3coins", player3coins) :
                new ObjectParameter("player3coins", typeof(int));
    
            var player4IDParameter = player4ID.HasValue ?
                new ObjectParameter("player4ID", player4ID) :
                new ObjectParameter("player4ID", typeof(int));
    
            var player4starsParameter = player4stars.HasValue ?
                new ObjectParameter("player4stars", player4stars) :
                new ObjectParameter("player4stars", typeof(int));
    
            var player4coinsParameter = player4coins.HasValue ?
                new ObjectParameter("player4coins", player4coins) :
                new ObjectParameter("player4coins", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNewGame", player1IDParameter, player1starsParameter, player1coinsParameter, player2IDParameter, player2starsParameter, player2coinsParameter, player3IDParameter, player3starsParameter, player3coinsParameter, player4IDParameter, player4starsParameter, player4coinsParameter);
        }
    
        public virtual int spNewUser(string name, string imagePath)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spNewUser", nameParameter, imagePathParameter);
        }
    }
}
